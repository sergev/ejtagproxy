#summary About ejtagproxy project.

EJTAGproxy is a utility for debugging [http://www.microchip.com/en_US/family/32bit/ PIC32 microcontrollers] with GNU debugger via JTAG or ICSP adapter.  

|| [https://sites.google.com/site/matiascapeletto/gdb.logo.small.png] || [http://www.pddnet.com/uploadedImages/PDD/Design_Products/Electrical_And_Electronic/2010-10/microchip-pic-32.jpg] ||

Supported adapters:
 * [http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1406&dDocName=en023805 Microchip PICkit2]
 * [http://www.microchip.com/stellent/idcplg?IdcService=SS_GET_PAGE&nodeId=1406&dDocName=en538340 Microchip PICkit3] with scripting firmware (use [http://ww1.microchip.com/downloads/en/DeviceDoc/PICkit3_scripting_v03.00beta.zip Scripting Tool] to upgrade)
 * [http://www.olimex.com/dev/arm-usb-tiny.html Olimex ARM-USB-Tiny] JTAG adapter

= Usage =
{{{
    ejtagproxy [options]
}}}

Options:
{{{
    -d, --daemon        run as daemon
    -p, --port=PORT     use the specified TCP port (default 2000)
    -D, --debug         output debug messages
}}}

To start a debug session:
  # Run ejtagproxy.
  # Attach a USB adapter to target board.
  # Run gdb and connect to the PIC32 target:
{{{
    set remote hardware-breakpoint-limit 6
    set remote hardware-watchpoint-limit 2
    target remote localhost:2000
}}}

When gdb session is closed, ejtagproxy disconnects from the target board. You can use other tools, like pic32prog, to update the target software and then start a new gdb session.  No need to restart ejtagproxy between sessions.  You can safely run it as a daemon.

= Install =
To build on Linux or Mac OS X, run:
{{{
    make
    make install
}}}

To build on Windows using MINGW compiler, run:
{{{
    gmake -f make-mingw
}}}

= History =
The utility is based on sources of:
 * [http://gdbproxy.sourceforge.net/ GDBproxy] project by Steve Underwood
 * [http://code.google.com/p/mcprog/ MCprog, MCremote], [http://code.google.com/p/milprog/ MILprog] and [http://code.google.com/p/pic32prog/ PIC32prog] projects by Serge Vakulenko